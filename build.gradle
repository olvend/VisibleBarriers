buildscript {
    repositories {
        maven { url 'http://files.minecraftforge.net/maven' }
        maven { url 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    runDir = 'run'
    mappings = 'stable_20'
    makeObfSourceJar = false
}

mixin {
    add sourceSets.main, 'visiblebarriers.refmap.json'
}

repositories {
    maven { url 'https://repo.spongepowered.org/maven/' }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest.attributes(
            'FMLCorePlugin' : 'io.github.olvend.visiblebarriers.mixin.MixinLoader',
            'ForceLoadAsMod': true,
            'TweakOrder': 0,
            'ModSide': 'CLIENT',
            'FMLCorePluginContainsFMLMod': true,
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'visiblebarriers.mixins.json'
    )

    from(configurations.runtimeClasspath.collect { zipTree(it) }) {
        exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'dummyThing'
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}
